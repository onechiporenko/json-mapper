{"name":"Json-mapper","tagline":"Map one object to another","body":"#JSON Mapper\r\n\r\n### What is it?\r\nSmall mapper for JSONs. It allows you to convert one object to another with minimal effort.\r\nIt's similar to [Ember-json-mapper](https://github.com/onechiporenko/ember-json-mapper), but without any dependencies.\r\n\r\n### Installing\r\n````\r\nbower i json-mapper\r\n````\r\n\r\n\r\n### Usage examples\r\nBasic\r\n````javascript\r\nvar map = { a: 'a', c: 'b' };\r\nvar source = { a: 1, b: 2 };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, c: 2 }\r\n````\r\n\r\nNested objects\r\n````javascript\r\nvar map = { a: 'a', d: 'b.c' };\r\nvar source = { a: 1, b: { c: 2 } };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: 2 }\r\n````\r\n\r\nNested keys\r\n````javascript\r\nvar map = { a: 'a', 'd.e': 'b' };\r\nvar source = { a: 1, b: 2 };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: { e: 2 } }\r\n````\r\n\r\nNested objects and nested keys\r\n````javascript\r\nvar map = { a: 'a', 'd.e': 'b.c' };\r\nvar source = { a: 1, b: { c: 2 } };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: { e: 2 } }\r\n````\r\n\r\nObjects as keys\r\n````javascript\r\nvar map = { a: 'a', c: { key: 'b' } };\r\nvar source = { a: 1, b: 2 };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, c: 2 }\r\n````\r\n\r\nWith default value\r\n````javascript\r\nvar map = { a: 'a', c: { key: 'b', default: 3 } };\r\nvar source = { a: 1, b: 2 };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, c: 2 }\r\n````\r\n\r\nSet value without mapping from source\r\n````javascript\r\nvar map = { a: 'a', c: { default: 3 } };\r\nvar source = { a: 1, b: 2 };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, c: 3 }\r\n````\r\n\r\nCustom getter\r\n````javascript\r\nvar map = { a: 'a', 'b': { custom: function (source) {\r\n  return source.b.c + 1;\r\n} } };\r\nvar source = { a: 1, b: { c: 2 } };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, b: 3 }\r\n````\r\n\r\nArray-properties mapping\r\n````javascript\r\nvar map = { a: 'a', d: { key: 'b', map: { c: 'c' } } };\r\nvar source = { a: 1, b: [\r\n  {c: 1, d: 1},\r\n  {c: 2, d: 2}\r\n] };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: [ {c: 1}, {c: 2} ] }\r\n````\r\n\r\n````javascript\r\nvar map = { a: 'a', d: { key: 'b', map: { c: 'c', f: { default: 2 } } } };\r\nvar source = { a: 1, b: [\r\n  {c: 1, d: 1},\r\n  {c: 2, d: 2}\r\n] };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: [ {c: 1, f: 2}, {c: 2, f: 2} ] }\r\n````\r\n\r\nMulti-nesting\r\n````javascript\r\nvar map = { a: 'a', d: { key: 'b', map: { c: 'c', v: { key: 'd', map: { e1: 'e', f1: 'f' } } } } };\r\nvar source = { a: 1, b: [\r\n  {c: 1, d: [\r\n    { e: 3, f: 4 }\r\n  ] },\r\n  {c: 2, d: [\r\n    { e: 5, f: 6 }\r\n  ] }\r\n] };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: [ {c: 1, v: [ { e1: 3, f1: 4 } ] }, {c: 2, v: [ { e1: 5, f1: 6 } ] } ] }\r\n````\r\n\r\nCustom getter for nested objects\r\n````javascript\r\nvar map = { a: 'a', d: { key: 'b', map: { c: 'c', v: { key: 'd', map: { e1: 'e', f1: { custom: function(source) {\r\n  return source.f + 1;\r\n} } } } } } };\r\nvar source = { a: 1, b: [\r\n  {c: 1, d: [\r\n    { e: 3, f: 4 }\r\n  ] },\r\n  {c: 2, d: [\r\n    { e: 5, f: 6 }\r\n  ] }\r\n] };\r\nvar mapped = jsonMapper.map(source, map); // { a: 1, d: [ {c: 1, v: [ { e1: 3, f1: 5 } ] }, {c: 2, v: [ { e1: 5, f1: 7 } ] } ] }\r\n````","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}